apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: nodered
  name: nodered
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodered
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network: "true"
        io.kompose.service: nodered
    spec:
      containers:
        - env:
            - name: TZ
              value: Etc/UTC
          image: nodered
          name: nodered
          ports:
            - containerPort: 1880
          resources: {}
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /data
              name: nodered-claim0
            - mountPath: /root/.ssh
              name: nodered-claim1
            - mountPath: /var/run/docker.sock
              name: nodered-claim2
            - mountPath: /var/run/dbus/system_bus_socket
              name: nodered-claim3
      restartPolicy: Always
      volumes:
        - name: nodered-claim0
          persistentVolumeClaim:
            claimName: nodered-claim0
        - name: nodered-claim1
          persistentVolumeClaim:
            claimName: nodered-claim1
        - name: nodered-claim2
          persistentVolumeClaim:
            claimName: nodered-claim2
        - name: nodered-claim3
          persistentVolumeClaim:
            claimName: nodered-claim3
status: {}
